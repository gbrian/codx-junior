[build-system]
requires = ["setuptools", "wheel"]

[project]
name = "codx-junior"
version = "0.1.0"
description = "Your AI coding assistant"
readme = "README.md"
requires-python = ">=3.8, <4.0"
dependencies = [
  'black == 23.3.0',
  'click == 8.1.6',
  'mypy == 1.3.0',
  'openai >= 0.27.8',
  'pre-commit == 3.3.3',
  'pytest == 7.3.1',
  'ruff == 0.0.272',
  'termcolor==2.3.0',
  'typer == 0.9.0',
  'rudder-sdk-python == 2.0.2',
  'dataclasses-json == 0.5.7',
  'tiktoken ==0.5.2',
  'tabulate == 0.9.0',
  'python-dotenv == 0.21.0',
  'langchain>=0.1.4',
  'agent-protocol==1.0.0',
  'tk==0.1.0',
  'flask>=2.0.2',
  'Werkzeug>=2.0',
  'gunicorn>=20.0',
  'chromadb==0.4.18',
  'esprima==4.0.1',
  'simsimd>=3.6.3',
  'python-slugify>=8.0.1',
  'httpx>=0.26.0',
  'llama-index>=0.9.42',
  'langchain-community==0.0.17',
  'tree_sitter>=0.20.4',
  'tree_sitter_languages',
  'tree-sitter-java',
  'tree-sitter-c-sharp',
  'tree-sitter-html',
  'langchain_openai>=0.0.5',
  'apscheduler>=3.10.4',
  'uvicorn>=0.29.0',
  'pexpect',
  'langchain-anthropic',
  'anthropic',
  'jupyterlab',
  'fastapi_socketio'
]

# chromadb 0.3.29 for compatibility with Ubuntu and lower Sqlite3

classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "License :: OSI Approved :: MIT License",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[project.optional-dependencies]
test = [
    "pytest >= 7.3.1",
]
doc = [

    "autodoc_pydantic >= 1.8.0",
    "myst_parser >= 0.18.1",
    "nbsphinx >= 0.8.9",
    "sphinx >= 4.5.0",
    "sphinx-autobuild >= 2021.3.14",
    "sphinx_book_theme >= 0.3.3",
    "sphinx_rtd_theme >= 1.0.0",
    "sphinx-typlog-theme >= 0.8.0",
    "sphinx-panels >= 0.6.0",
    "toml >= 0.10.2",
    "myst-nb >= 0.17.1",
    "linkchecker >= 10.2.1",
    "sphinx-copybutton >= 0.5.1",
    "markdown-include >= 0.6.0",
    "sphinx_copybutton >= 0.5.2"
]


[project.scripts]
codx-junior = 'codx.app:app'

[tool.setuptools]
packages = ["codx"]

[tool.ruff]
select = ["F", "E", "W", "I001"]
line-length = 100
show-fixes = false
target-version = "py311"
task-tags = ["TODO", "FIXME"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[project.urls]
"Homepage" = "https://github.com/gbrian/codx-junior"
"Bug Tracker" = "https://github.com/gbrian/codx-junior/issues"

[tool.ruff.isort]
known-first-party = []
known-third-party = []
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]
combine-as-imports = true
split-on-trailing-comma = false
lines-between-types = 1

[tool.black]
line-length = 90
target-version = ["py311"]
include = '\.pyi?$'
exclude = '''
(
  /(
      \.direnv
    | \.eggs
    | \.git
    | \.tox
    | \.venv
    | _build
    | build
    | dist
    | venv
  )/
)
'''